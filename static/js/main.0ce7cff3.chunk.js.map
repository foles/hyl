{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["seconds","ms","minutesms","Math","floor","minutes","hoursms","hours","daysms","days","App","timeNow","Date","getTime","diff","useState","count","setCount","useEffect","setTimeout","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA8CA,IAAMA,EAAU,SAACC,GACf,IAAIC,EAAYD,EAAE,IAClB,OAAOE,KAAKC,MAAOF,EAAc,MAG7BG,EAAU,SAACJ,GACf,IAAIK,EAAUL,EAAE,KAChB,OAAOE,KAAKC,MAAOE,EAAD,MAGdC,EAAQ,SAACN,GACb,IAAIO,EAASP,EAAE,MACf,OAAOE,KAAKC,MAAOI,EAAD,OAIdC,EAAO,SAACR,GACZ,IAAIQ,EAAON,KAAKC,MAAMH,EAAE,OACxB,OAAOQ,GAOMC,EAnEf,WAEE,IACIC,GADM,IAAIC,MACIC,UAEdC,EADM,IAAIF,KAAK,iCAAiCC,UACnCF,EACjB,EAA0BI,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAMA,OAJAC,qBAAU,WACRC,YAAW,WAAcF,EAASD,EAAQ,OAAS,QAInD,sBAAKI,UAAU,aAAf,UAEE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,cAAb,SAA4BX,EAAKO,KACjC,mBAAGI,UAAU,YAAb,qBAEF,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,cAAb,SAA4Bb,EAAMS,KAClC,mBAAGI,UAAU,YAAb,sBAEF,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,cAAb,SAA4Bf,EAAQW,KACpC,mBAAGI,UAAU,YAAb,qBAEF,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,cAAb,SAA4BpB,EAAQgB,KACpC,mBAAGI,UAAU,YAAb,wBAIJ,mBAAGA,UAAU,gBAAb,kCC1BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0ce7cff3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nfunction App() {\n\n  let now = new Date();\n  let timeNow = now.getTime();\n  let fin = new Date('Sep 12 2021 08:00:00 GMT-0400').getTime();\n  let diff = fin - timeNow;\n  const [count, setCount] = useState(diff);\n\n  useEffect(() => {\n    setTimeout(function () { setCount(count - 1000) }, 1000);\n  });\n\n  return (\n    <div className=\"contenedor\">\n\n      <div className=\"time--contenedor\">\n        <div className=\"time\">\n          <p className=\"time--value\">{days(count)}</p>\n          <p className=\"time--tag\">DAYS</p>\n        </div>\n        <div className=\"time\">\n          <p className=\"time--value\">{hours(count)}</p>\n          <p className=\"time--tag\">HOURS</p>\n        </div>\n        <div className=\"time\">\n          <p className=\"time--value\">{minutes(count)}</p>\n          <p className=\"time--tag\">MINS</p>\n        </div>\n        <div className=\"time\">\n          <p className=\"time--value\">{seconds(count)}</p>\n          <p className=\"time--tag\">SECS</p>\n        </div>\n      </div>\n\n      <p className=\"footer--quote\">\n        to see you again\n      </p>\n    </div>\n  );\n}\n\n\nconst seconds = (ms) => {\n  var minutesms = ms % (60 * 1000);\n  return Math.floor((minutesms) / (1000));\n}\n\nconst minutes = (ms) => {\n  var hoursms = ms % (60 * 60 * 1000);\n  return Math.floor((hoursms) / (60 * 1000));\n}\n\nconst hours = (ms) => {\n  var daysms = ms % (24 * 60 * 60 * 1000);\n  return Math.floor((daysms) / (60 * 60 * 1000));\n\n}\n\nconst days = (ms) => {\n  var days = Math.floor(ms / (24 * 60 * 60 * 1000));\n  return days\n}\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}